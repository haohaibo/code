//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-30521435
// Cuda compilation tools, release 11.4, V11.4.152
// Based on NVVM 7.0.1
//

.version 7.4
.target sm_35
.address_size 64

	// .globl	_Z5sgemmILj32EEviiiffPKfS1_Pf
// _ZZ5sgemmILj32EEviiiffPKfS1_PfE2As has been demoted
// _ZZ5sgemmILj32EEviiiffPKfS1_PfE2Bs has been demoted

.visible .entry _Z5sgemmILj32EEviiiffPKfS1_Pf(
	.param .u32 _Z5sgemmILj32EEviiiffPKfS1_Pf_param_0, // M
	.param .u32 _Z5sgemmILj32EEviiiffPKfS1_Pf_param_1, // K
	.param .u32 _Z5sgemmILj32EEviiiffPKfS1_Pf_param_2, // N
	.param .f32 _Z5sgemmILj32EEviiiffPKfS1_Pf_param_3, // alpha
	.param .f32 _Z5sgemmILj32EEviiiffPKfS1_Pf_param_4, // beta
	.param .u64 _Z5sgemmILj32EEviiiffPKfS1_Pf_param_5, // float* A
	.param .u64 _Z5sgemmILj32EEviiiffPKfS1_Pf_param_6, // float* B
	.param .u64 _Z5sgemmILj32EEviiiffPKfS1_Pf_param_7  // float* C
)
{
	// %p 谓词寄存器，用于条件分支 声明3个谓词寄存器 %p0 %p1 %p2
	.reg .pred 	%p<3>;
	// %f 32位浮点寄存器 %f0 - %f109
	.reg .f32 	%f<110>;

	// %r 32位整数寄存器 声明33个32位整数寄存器 %r0 - %r32
	.reg .b32 	%r<33>;
	// %rd 64位整数寄存器 声明28个64位整数寄存器 %rd0 - %rd27 
	.reg .b64 	%rd<28>;

	// demoted variable
	// .shared表示该变量存储在共享内存shared memory中 .align 4表示变量的起始地址对齐到4字节
	// .b8 表示数据类型是字节(8bit),定义共享内存中的最小存储单元位字节
	// __shared__ float As[32*32] 4096是因为一个float有4字节，总共(32*32)*4B = 4096B
	.shared .align 4 .b8 _ZZ5sgemmILj32EEviiiffPKfS1_PfE2As[4096];
	// demoted variable
	// __shared__ float Bs[32*32]
	.shared .align 4 .b8 _ZZ5sgemmILj32EEviiiffPKfS1_PfE2Bs[4096];

	// load K to reg %r12
	ld.param.u32 	%r12, [_Z5sgemmILj32EEviiiffPKfS1_Pf_param_1];
	// load N to reg %r13
	ld.param.u32 	%r13, [_Z5sgemmILj32EEviiiffPKfS1_Pf_param_2];
	// load alpha to reg f4
	ld.param.f32 	%f4, [_Z5sgemmILj32EEviiiffPKfS1_Pf_param_3];
	// load beta to reg f5
	ld.param.f32 	%f5, [_Z5sgemmILj32EEviiiffPKfS1_Pf_param_4];
	// load pointer of A to rd9
	ld.param.u64 	%rd9, [_Z5sgemmILj32EEviiiffPKfS1_Pf_param_5];
	// load pointer of B to rd10
	ld.param.u64 	%rd10, [_Z5sgemmILj32EEviiiffPKfS1_Pf_param_6];
	// load pointer of C to rd11
	ld.param.u64 	%rd11, [_Z5sgemmILj32EEviiiffPKfS1_Pf_param_7];
	mov.u32 	%r14, %ctaid.x; // load blockIdx.x to %r14
	shl.b32 	%r1, %r14, 5; // %r1 = %r14 * 32, blockIdx.x * BLOCKSIZE
	mov.u32 	%r15, %ctaid.y; // load blockIdx.y to %r15
	shl.b32 	%r2, %r15, 5; // %r2 = %r15 * 32, blockIdx.y * BLOCKSIZE
	mov.u32 	%r16, %tid.x; // %r16 = threadIdx.x
	shr.u32 	%r3, %r16, 5; // %r3 = %r16 / 32, threadIdx.x / BLOCKSIZE, int x
	and.b32  	%r4, %r16, 31; // %r4 = %r16 % 32, threadIdx.x % BLOCKSIZE, int y
	shr.u32 	%r5, %r12, 5; // %r5 = K / BLOCKSIZE
	setp.eq.s32 	%p1, %r5, 0;
	mad.lo.s32 	%r17, %r3, %r13, %r4; // %r17 = (%r3 * %r13) + %r4, (x*N) + y
	cvt.s64.s32 	%rd1, %r17; // convert from signed 32bit to signed 64bit, (x*N) + y
	mov.f32 	%f109, 0f00000000;
	@%p1 bra 	$L__BB0_3;

	mad.lo.s32 	%r19, %r3, %r12, %r4; // %r19 = (%r3 * %r12) + %r4, (x*K) + y
	cvt.s64.s32 	%rd12, %r19;
	and.b32  	%r21, %r16, 1073741792;
	or.b32  	%r22, %r21, %r4;
	shl.b32 	%r23, %r22, 2;
	mov.u32 	%r24, _ZZ5sgemmILj32EEviiiffPKfS1_PfE2As;
	add.s32 	%r6, %r24, %r23;
	mov.u32 	%r25, _ZZ5sgemmILj32EEviiiffPKfS1_PfE2Bs;
	add.s32 	%r7, %r25, %r23;
	shl.b32 	%r26, %r13, 5;
	shl.b32 	%r27, %r16, 2;
	and.b32  	%r28, %r27, -128;
	add.s32 	%r8, %r24, %r28;
	shl.b32 	%r29, %r4, 2;
	add.s32 	%r9, %r25, %r29;
	cvta.to.global.u64 	%rd13, %rd10; // B
	cvt.u64.u32 	%rd14, %r2; // blockIdx.y * BLOCKSIZE
	add.s64 	%rd15, %rd1, %rd14; // ((x*N) + y) + (blockIdx.y * BLOCKSIZE)
	shl.b64 	%rd16, %rd15, 2; // (((x*N) + y) + (blockIdx.y * BLOCKSIZE)) * 4
	add.s64 	%rd27, %rd13, %rd16; // B + (((x*N) + y) + (blockIdx.y * BLOCKSIZE)) * 4
	mul.wide.u32 	%rd3, %r26, 4;
	mul.lo.s32 	%r30, %r1, %r12; // (lockIdx.x * BLOCKSIZE) * K
	cvt.u64.u32 	%rd17, %r30;
	add.s64 	%rd18, %rd12, %rd17; // ((x*K) + y) + (lockIdx.x * BLOCKSIZE) * K
	cvta.to.global.u64 	%rd19, %rd9; // A
	shl.b64 	%rd20, %rd18, 2; // (((x*K) + y) + (lockIdx.x * BLOCKSIZE) * K) * 4
	add.s64 	%rd26, %rd19, %rd20; // A + (((x*K) + y) + (lockIdx.x * BLOCKSIZE) * K) * 4
	mov.f32 	%f109, 0f00000000;
	mov.u32 	%r32, 0;

// main loop
$L__BB0_2:
	ld.global.f32 	%f8, [%rd26];
	st.shared.f32 	[%r6], %f8;
	ld.global.f32 	%f9, [%rd27];
	st.shared.f32 	[%r7], %f9;
	bar.sync 	0;
	ld.shared.f32 	%f10, [%r9];
	ld.shared.f32 	%f11, [%r8];
	fma.rn.f32 	%f12, %f11, %f10, %f109;
	ld.shared.f32 	%f13, [%r9+128];
	ld.shared.f32 	%f14, [%r8+4];
	fma.rn.f32 	%f15, %f14, %f13, %f12;
	ld.shared.f32 	%f16, [%r9+256];
	ld.shared.f32 	%f17, [%r8+8];
	fma.rn.f32 	%f18, %f17, %f16, %f15;
	ld.shared.f32 	%f19, [%r9+384];
	ld.shared.f32 	%f20, [%r8+12];
	fma.rn.f32 	%f21, %f20, %f19, %f18;
	ld.shared.f32 	%f22, [%r9+512];
	ld.shared.f32 	%f23, [%r8+16];
	fma.rn.f32 	%f24, %f23, %f22, %f21;
	ld.shared.f32 	%f25, [%r9+640];
	ld.shared.f32 	%f26, [%r8+20];
	fma.rn.f32 	%f27, %f26, %f25, %f24;
	ld.shared.f32 	%f28, [%r9+768];
	ld.shared.f32 	%f29, [%r8+24];
	fma.rn.f32 	%f30, %f29, %f28, %f27;
	ld.shared.f32 	%f31, [%r9+896];
	ld.shared.f32 	%f32, [%r8+28];
	fma.rn.f32 	%f33, %f32, %f31, %f30;
	ld.shared.f32 	%f34, [%r9+1024];
	ld.shared.f32 	%f35, [%r8+32];
	fma.rn.f32 	%f36, %f35, %f34, %f33;
	ld.shared.f32 	%f37, [%r9+1152];
	ld.shared.f32 	%f38, [%r8+36];
	fma.rn.f32 	%f39, %f38, %f37, %f36;
	ld.shared.f32 	%f40, [%r9+1280];
	ld.shared.f32 	%f41, [%r8+40];
	fma.rn.f32 	%f42, %f41, %f40, %f39;
	ld.shared.f32 	%f43, [%r9+1408];
	ld.shared.f32 	%f44, [%r8+44];
	fma.rn.f32 	%f45, %f44, %f43, %f42;
	ld.shared.f32 	%f46, [%r9+1536];
	ld.shared.f32 	%f47, [%r8+48];
	fma.rn.f32 	%f48, %f47, %f46, %f45;
	ld.shared.f32 	%f49, [%r9+1664];
	ld.shared.f32 	%f50, [%r8+52];
	fma.rn.f32 	%f51, %f50, %f49, %f48;
	ld.shared.f32 	%f52, [%r9+1792];
	ld.shared.f32 	%f53, [%r8+56];
	fma.rn.f32 	%f54, %f53, %f52, %f51;
	ld.shared.f32 	%f55, [%r9+1920];
	ld.shared.f32 	%f56, [%r8+60];
	fma.rn.f32 	%f57, %f56, %f55, %f54;
	ld.shared.f32 	%f58, [%r9+2048];
	ld.shared.f32 	%f59, [%r8+64];
	fma.rn.f32 	%f60, %f59, %f58, %f57;
	ld.shared.f32 	%f61, [%r9+2176];
	ld.shared.f32 	%f62, [%r8+68];
	fma.rn.f32 	%f63, %f62, %f61, %f60;
	ld.shared.f32 	%f64, [%r9+2304];
	ld.shared.f32 	%f65, [%r8+72];
	fma.rn.f32 	%f66, %f65, %f64, %f63;
	ld.shared.f32 	%f67, [%r9+2432];
	ld.shared.f32 	%f68, [%r8+76];
	fma.rn.f32 	%f69, %f68, %f67, %f66;
	ld.shared.f32 	%f70, [%r9+2560];
	ld.shared.f32 	%f71, [%r8+80];
	fma.rn.f32 	%f72, %f71, %f70, %f69;
	ld.shared.f32 	%f73, [%r9+2688];
	ld.shared.f32 	%f74, [%r8+84];
	fma.rn.f32 	%f75, %f74, %f73, %f72;
	ld.shared.f32 	%f76, [%r9+2816];
	ld.shared.f32 	%f77, [%r8+88];
	fma.rn.f32 	%f78, %f77, %f76, %f75;
	ld.shared.f32 	%f79, [%r9+2944];
	ld.shared.f32 	%f80, [%r8+92];
	fma.rn.f32 	%f81, %f80, %f79, %f78;
	ld.shared.f32 	%f82, [%r9+3072];
	ld.shared.f32 	%f83, [%r8+96];
	fma.rn.f32 	%f84, %f83, %f82, %f81;
	ld.shared.f32 	%f85, [%r9+3200];
	ld.shared.f32 	%f86, [%r8+100];
	fma.rn.f32 	%f87, %f86, %f85, %f84;
	ld.shared.f32 	%f88, [%r9+3328];
	ld.shared.f32 	%f89, [%r8+104];
	fma.rn.f32 	%f90, %f89, %f88, %f87;
	ld.shared.f32 	%f91, [%r9+3456];
	ld.shared.f32 	%f92, [%r8+108];
	fma.rn.f32 	%f93, %f92, %f91, %f90;
	ld.shared.f32 	%f94, [%r9+3584];
	ld.shared.f32 	%f95, [%r8+112];
	fma.rn.f32 	%f96, %f95, %f94, %f93;
	ld.shared.f32 	%f97, [%r9+3712];
	ld.shared.f32 	%f98, [%r8+116];
	fma.rn.f32 	%f99, %f98, %f97, %f96;
	ld.shared.f32 	%f100, [%r9+3840];
	ld.shared.f32 	%f101, [%r8+120];
	fma.rn.f32 	%f102, %f101, %f100, %f99;
	ld.shared.f32 	%f103, [%r9+3968];
	ld.shared.f32 	%f104, [%r8+124];
	fma.rn.f32 	%f109, %f104, %f103, %f102;
	bar.sync 	0;
	add.s64 	%rd27, %rd27, %rd3;
	add.s64 	%rd26, %rd26, 128;
	add.s32 	%r32, %r32, 1;
	setp.lt.u32 	%p2, %r32, %r5;
	@%p2 bra 	$L__BB0_2;

// write C
$L__BB0_3:
	cvta.to.global.u64 	%rd21, %rd11;
	mad.lo.s32 	%r31, %r1, %r13, %r2;
	cvt.u64.u32 	%rd22, %r31;
	add.s64 	%rd23, %rd22, %rd1;
	shl.b64 	%rd24, %rd23, 2;
	add.s64 	%rd25, %rd21, %rd24;
	ld.global.f32 	%f105, [%rd25];
	mul.f32 	%f106, %f105, %f5;
	fma.rn.f32 	%f107, %f109, %f4, %f106;
	st.global.f32 	[%rd25], %f107;
	ret;

}

